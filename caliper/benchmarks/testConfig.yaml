test:
    name: Campaign-contract-benchmark
    description: test benchmark
    workers:
      type: local
      number: 2
    rounds:
      # - label: Create campaign (fixed-rate)
      #   description:  Test creating campaign benchmark(fixed-rate)
      #   txNumber: 300
      #   rateControl:
      #       type: fixed-rate
      #       opts:
      #         tps: 100
      #   workload:
      #     module: ./workloads/createCampaign.js
      #     arguments:
      #       test: 2
      #       contractId: campaign
      - label: Collect customer data (linear sending rate:150-300)
        description:  Test collecting customer data benchmark(linear-rate)
        # txNumber: 1000
        txDuration: 60
        rateControl:
            type: fixed-rate
            opts:
              tps: 200
          # type: linear-rate
          # opts: {
          #   "startingTps": 35,
          #   "finishingTps": 200
          #   }
        workload:
          module: ./workloads/collectData.js
          arguments:
            testRound: test1
            contractId: campaign
      # - label: Collect customer data (linear-rate-150 300tps)
      #   description:  Test collecting customer data benchmark(fixed-rate)
      #   txNumber: 3000
      #   rateControl:
      #       type: linear-rate
      #       opts: {
      #         "startingTps": 150,
      #         "finishingTps": 300
      #         }
      #   workload:
      #     module: ./workloads/collectData.js
      #     arguments:
      #       test: 10
      #       contractId: campaign

observer:
  type: prometheus
  interval: 5

monitor:
  interval: 1
  type: ['docker', 'prometheus', 'cadvisor']
  docker:
    containers: ['all']
  prometheus:
    url: "http://0.0.0.0:9090"
    metrics:
      ignore: [prometheus, cadvisor, grafana, node-exporter]
      include:
        Endorse Time (s):
          query: rate(endorser_proposal_duration_sum{chaincode="backup"}[5m])/rate(endorser_proposal_duration_count{chaincode="backup"}[5m])
          step: 1
          label: instance
          statistic: avg
